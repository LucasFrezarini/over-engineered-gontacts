// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package container

import (
	"github.com/LucasFrezarini/go-contacts/contacts"
	"github.com/LucasFrezarini/go-contacts/db"
	"github.com/LucasFrezarini/go-contacts/logger"
	"github.com/LucasFrezarini/go-contacts/server"
	"github.com/LucasFrezarini/go-contacts/server/middlewares"
	"github.com/LucasFrezarini/go-contacts/server/routes"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func InitializeServer() (*server.Server, error) {
	zapLogger, err := logger.ProvideLogger()
	if err != nil {
		return nil, err
	}
	sqlDB, err := db.ProvideDB(zapLogger)
	if err != nil {
		return nil, err
	}
	contactsRepository := contacts.ProvideContactsRepository(sqlDB, zapLogger)
	container := middlewares.ProvideMiddlewaresContainer(zapLogger)
	echo := server.ProvideEcho(container)
	controller := contacts.ProvideContactsController(contactsRepository, zapLogger, echo)
	router := routes.ProvideRouter(controller, zapLogger, echo)
	serverServer := server.ProvideServer(router, zapLogger, echo)
	return serverServer, nil
}
